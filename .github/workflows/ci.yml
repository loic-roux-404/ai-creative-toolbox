name: tests

on:
  push:
    branches: [main]
    tags: ['v[0-9]*', '[0-9]+.[0-9]+*']
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 0 1,16 * *'

permissions:
  contents: read

concurrency:
  group: >-
    ${{ github.workflow }}-${{ github.ref_type }}-
    ${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with: {fetch-depth: 0}
      - uses: actions/setup-python@v4
        with: {python-version: "3.11"}
      - name: Install Bazel
        run: sudo apt-get install bazel
      - name: Run static analysis and format checkers
        run: bazel run //core_automation:pre_commit
      - name: Build package distribution files
        run: bazel build //core_automation:build //main_cli:build //scrape-percipio:build //scrape-percipio-cli:build
      - name: Store the distribution files for use in other stages
        uses: actions/upload-artifact@v3
        with:
          name: distribution-files
          path: dist/
          retention-days: 1

  test:
    needs: prepare
    strategy:
      matrix:
        python:
        - "3.7"
        - "3.11"
        platform:
        - ubuntu-latest
        - macos-latest
        - windows-latest
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
            python-version: ${{ matrix.python }}
      - name: Install Bazel
        run: sudo apt-get install bazel
      - name: Retrieve pre-built distribution files
        uses: actions/download-artifact@v3
        with: {name: distribution-files, path: dist/}
      - name: Run tests
        run: bazel test //core_automation:test //main_cli:test //scrape-percipio:test //scrape-percipio-cli:test
      - name: Upload partial coverage report
        uses: coverallsapp/github-action@master
        with:
          path-to-lcov: coverage.lcov
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: ${{ matrix.platform }} - py${{ matrix.python }}
          parallel: true

  finalize:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Finalize coverage report
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true

  publish:
    needs: finalize
    if: ${{ github.event_name == 'push' && contains(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with: {python-version: "3.11"}
      - name: Install Bazel
        run: sudo apt-get install bazel
      - name: Retrieve pre-built distribution files
        uses: actions/download-artifact@v3
        with: {name: distribution-files, path: dist/}
      - name: Publish Package
        env:
          TWINE_REPOSITORY: pypi
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: bazel run //core_automation:publish
